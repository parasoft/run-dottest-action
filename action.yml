name: 'Run Parasoft dotTEST'
description: 'A GitHub Action for running Parasoft dotTEST analysis.'
author: 'Parasoft'
branding:
  icon: 'aperture'
  color: 'blue'
inputs:
  workingDir:
    description: 'Path to the working directory.'
    required: false
    default: ${{ github.workspace }}
  installDir:
    description: 'Path to the dotTEST installation directory, which contains dottestcli.exe. If not specified, dottestcli.exe will be searched for on PATH.'
    required: false
  solution:
    description: 'Path to the solution to be analyzed. Specify a semicolon-separated list of paths to analyze many solutions. Supports ANT-style wildcards.'
    required: false
    default: '.\*.sln'
  project:
    description: 'Path to the project to be analyzed when no solution is provided. Specify a semicolon-separated list of paths to analyze many projects. Supports ANT-style wildcards.'
    required: false
  website:
    description: 'Full path to the website directory to be analyzed when no solution is provided.'
    required: false
  testConfig:
    description: 'URL of the test configuration to be used for analysis.'
    required: false
    default: 'builtin://Recommended .NET Core Rules'
  resource:
    description: 'Solution-relative path to a project in a solution, a directory of files in a project, or a file. Use a semicolon-separated list to specify multiple paths.'
    required: false
  include:
    description: 'File system paths to files to include in analysis. Supports ANT-style wildcards. If not specified, all files are analyzed. Use a semicolon-separated list to specify multiple paths.'
    required: false
  exclude:
    description: 'File system paths to files to exclude from analysis. Supports ANT-style wildcards. Use a semicolon-separated list to specify multiple paths.'
    required: false
  referenceReportFile:
    description: 'Path to the baseline report.xml file for Test Impact Analysis.'
    required: false
  referenceCoverageFile:
    description: 'Path to the baseline coverage.xml file for Test Impact Analysis.'
    required: false
  reference:
    description: 'Path to additional assemblies required to resolve dependencies. Specify a semicolon-separated list of paths to provide many references. Supports ANT-style wildcards.'
    required: false
  reportDir:
    description: 'Path to the directory where the report will be created.'
    required: false
    default: '${{ github.workspace }}/.dottest/report/${{ github.run_number }}'
  publish:
    description: 'Publishes report to DTP.'
    required: false
  settings:
    description: 'Path to a settings file. Use a semicolon-separated list to specify multiple paths.'
    required: false
  property:
    description: 'A single configuration setting in the "key=value" format. Use a semicolon-separated list to specify multiple paths.'
    required: false
  nobuild:
    description: 'Disables the build of the tested solutions or projects.'
    required: false
  testTagFilter:
    description: 'Runs tests that are tagged with specific issue tracking types/IDs.'
    required: false
  solutionConfig:
    description: 'Solution configuration, e.g. "Debug".'
    required: false
  projectConfig:
    description: 'Project configuration, e.g. "Debug".'
    required: false
  targetPlatform:
    description: 'Target platform of the solution configuration (e.g."Any CPU") or project configuration (e.g. "AnyCPU").'
    required: false
  out:
    description: 'Path to the location where console output is saved.'
    required: false
  fail:
    description: 'Fails the command with exit code 2 or 4 if any findings are reported. It is recommended to use it with continue-on-error: true.'
    required: false
  showsettings:
    description: 'Lists all settings that are currently used.'
    required: false
  sarifMode:
    description: |-
      'Mode for GitHub report (SARIF) generation. You can use:
          # - "legacy" - for dotTEST 2020.2 or older
          # - "builtin" - for dotTEST 2021.1 or newer (default)
    required: false
    default: 'builtin'
outputs:
  report:
    description: 'Path to the report.sarif file (or null if it does not exist).'
  reportDir: 
    description: 'Path to the directory that contains the generated report.'
runs:
  using: 'node16'
  main: 'dist/index.js'
